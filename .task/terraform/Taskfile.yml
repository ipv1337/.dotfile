# https://taskfile.dev

version: '3'

tasks:

  default:
    desc: List all terraform tasks
    prefix: ⚙️ 
    cmds:
      - task {{default "--list" .CLI_ARGS}} | grep --color=always 'terraform:'


  init:
    desc: Initialize terraform modules
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - terraform -chdir="{{.USER_WORKING_DIR}}/{{.CLI_ARGS}}" init

  plan:
    desc: Plan terraform modules
    dir: '{{.USER_WORKING_DIR}}'
    deps: ['init']
    cmds: 
      - terraform -chdir="{{.USER_WORKING_DIR}}/{{.CLI_ARGS}}" plan

  plan-target:
    desc: Plan terraform target (usage - task tf:plan-target -- -target=module.google_oauth2_client)
    dir: '{{.USER_WORKING_DIR}}'
    deps: ['init']
    cmds: 
      - TF_CLI_ARGS_plan={{.CLI_ARGS}} terraform plan

  show:
    desc: Show terraform modules
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - terraform -chdir="{{.USER_WORKING_DIR}}/{{.CLI_ARGS}}" show

  fmt:
    desc: Format terraform modules
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - terraform -chdir="{{.USER_WORKING_DIR}}/{{.CLI_ARGS}}" fmt -recursive=true

  fmt-all:
    #desc: Format terraform modules (usage - task tf:fmt-all -- dir_prefix/{dev,int,stg,prd})
    desc: Format terraform modules (usage - task tf:fmt-all -- dir_prefix-*)
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - for i in `ls -d {{.CLI_ARGS}}`; do echo "Formatting $i"; cd $i; terraform fmt -recursive=true; cd -; done


  test:
    desc: Run all tests.
    cmds:
      - task: tf-test
    
  test-full:
    desc: Run tests for all terraform directories.
    silent: true
    # Both env and vars causes performance issues
    # vars:
    #   DIRECTORIES:
    #     sh: find . -type f -name '*.tf' -not -path "**/.terraform/*" -exec dirname {} \; | sort -u
    cmds:
      - |
        BOLD=$(tput bold)
        NORM=$(tput sgr0)

        CWD=$PWD

        DIRECTORIES=$(find . -type f -name '*.tf' -not -path "**/.terraform/*" -exec dirname {} \; | sort -u)
        for d in $DIRECTORIES; do 
          cd $d
          echo "${BOLD} $PWD:${NORM}"

          if ! terraform fmt -check=true -write=true -list=false -recursive=false; then
            echo "  ✗ terraform fmt" && exit $?
          else
            echo "  √ terraform fmt"
          fi

          if ! terraform init -backend=false -input=false -get=true -get-plugins=true -no-color > /dev/null; then
            echo "  ✗ terraform init" && exit $?
          else
            echo "  √ terraform init"
          fi

          if ! terraform validate > /dev/null; then
            echo "  ✗ terraform validate" && exit $?
          else
            echo "  √ terraform validate"
          fi

          cd $CWD
        done


  open:
    desc: Open terraform taskfile
    prefix: ⚙️
    cmds:
      - open {{.HOME}}/.task/terraform/Taskfile.yml
    silent: true
